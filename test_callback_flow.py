#!/usr/bin/env python3

import asyncio
import sys
import os
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, '/app/backend')

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ server.py
from server import handle_callback_query

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

async def test_crypto_callback():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ crypto callback'–æ–≤"""
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º callback query –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ Bitcoin 100‚ÇΩ
    test_callback_query = {
        'id': 'test_callback_123',
        'from': {
            'id': 123456789,
            'username': 'test_user',
            'first_name': 'Test',
            'last_name': 'User'
        },
        'message': {
            'chat': {'id': 123456789}
        },
        'data': 'crypto_btc_100'  # –≠—Ç–æ –¥–æ–ª–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å handle_crypto_payment_amount
    }
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º callback: crypto_btc_100")
    print("üìù –û–∂–∏–¥–∞–µ—Ç—Å—è: –≤—ã–∑–æ–≤ handle_crypto_payment_amount")
    print("-" * 50)
    
    try:
        await handle_callback_query(test_callback_query)
        print("‚úÖ Callback –æ–±—Ä–∞–±–æ—Ç–∞–Ω –±–µ–∑ –æ—à–∏–±–æ–∫")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ crypto callback –æ–±—Ä–∞–±–æ—Ç–∫–∏...")
    asyncio.run(test_crypto_callback())