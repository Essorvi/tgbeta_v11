#!/usr/bin/env python3

import asyncio
import requests
import json
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend
sys.path.insert(0, '/app/backend')

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
from dotenv import load_dotenv
load_dotenv('/app/backend/.env')

TELEGRAM_TOKEN = os.environ.get('TELEGRAM_TOKEN')

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏
from server import handle_telegram_update

async def get_updates(offset=None):
    """–ü–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram"""
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/getUpdates"
    params = {
        "timeout": 10,
        "limit": 10
    }
    if offset:
        params["offset"] = offset
    
    try:
        response = requests.get(url, params=params, timeout=15)
        if response.status_code == 200:
            return response.json()
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {response.status_code}")
            return None
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")
        return None

async def poll_updates():
    """Polling –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç Telegram"""
    print("ü§ñ –ó–∞–ø—É—Å–∫ Telegram polling...")
    offset = None
    
    while True:
        try:
            result = await get_updates(offset)
            
            if result and result.get('ok'):
                updates = result.get('result', [])
                
                for update in updates:
                    update_id = update.get('update_id')
                    offset = update_id + 1
                    
                    print(f"üì® –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ {update_id}")
                    
                    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                    try:
                        await handle_telegram_update(update)
                        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ {update_id} –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è {update_id}: {e}")
            
            await asyncio.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            
        except KeyboardInterrupt:
            print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ polling...")
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ polling: {e}")
            await asyncio.sleep(5)  # –ü–∞—É–∑–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

if __name__ == "__main__":
    print(f"üîë Token: {TELEGRAM_TOKEN[:10]}..." if TELEGRAM_TOKEN else "‚ùå Token –Ω–µ –Ω–∞–π–¥–µ–Ω")
    asyncio.run(poll_updates())