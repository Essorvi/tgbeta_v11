#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è eriksson_sop
"""

import asyncio
import os
import sys
from pathlib import Path
from motor.motor_asyncio import AsyncIOMotorClient
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
ROOT_DIR = Path(__file__).parent / 'backend'
load_dotenv(ROOT_DIR / '.env')

MONGO_URL = os.environ['MONGO_URL']
DB_NAME = os.environ['DB_NAME']
ADMIN_USERNAME = os.environ['ADMIN_USERNAME']

async def find_real_user():
    """–ò—â–µ—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è eriksson_sop"""
    client = AsyncIOMotorClient(MONGO_URL)
    db = client[DB_NAME]
    
    try:
        print(f"üîç –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å username: '{ADMIN_USERNAME}'")
        print(f"üìã ADMIN_USERNAME –∏–∑ .env: '{ADMIN_USERNAME}'")
        print()
        
        # –ò—â–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ—Ö–æ–∂–∏–º username
        users_cursor = db.users.find({
            "$or": [
                {"username": {"$regex": "eriksson", "$options": "i"}},
                {"username": ADMIN_USERNAME},
                {"username": f"@{ADMIN_USERNAME}"}
            ]
        })
        users = await users_cursor.to_list(length=None)
        
        print(f"üë• –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
        
        for user in users:
            print(f"\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:")
            print(f"  üÜî ID: {user.get('telegram_id')}")
            print(f"  üë§ –ò–º—è: {user.get('first_name', 'N/A')}")
            print(f"  üîó Username: '{user.get('username', 'N/A')}'")
            print(f"  üëë –ê–¥–º–∏–Ω: {user.get('is_admin', False)}")
            print(f"  üìÖ –°–æ–∑–¥–∞–Ω: {user.get('created_at', 'N/A')}")
            print(f"  ‚è∞ –ê–∫—Ç–∏–≤–µ–Ω: {user.get('last_active', 'N/A')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
            username = user.get('username', '')
            is_match = username == ADMIN_USERNAME
            print(f"  ‚úÖ –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å '{ADMIN_USERNAME}': {is_match}")
            
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ
        all_users = await db.users.find({}).to_list(length=None)
        print(f"\nüìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ: {len(all_users)}")
        
        print(f"\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
        for user in all_users[-5:]:
            print(f"  - {user.get('first_name', 'N/A')} (@{user.get('username', 'N/A')}) [Admin: {user.get('is_admin', False)}]")
            
    finally:
        client.close()

if __name__ == "__main__":
    asyncio.run(find_real_user())